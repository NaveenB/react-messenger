{"version":3,"sources":["components/ConversationSearch/index.js","components/ConversationListItem/index.js","components/Toolbar/index.js","components/ToolbarButton/index.js","components/ConversationList/index.js","components/Compose/index.js","components/Message/index.js","components/MessageList/index.js","components/Messenger/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["ConversationSearch","react_default","a","createElement","className","type","placeholder","ConversationListItem","props","useEffect","shave","_props$data","data","photo","name","text","src","alt","Toolbar","title","leftItems","rightItems","ToolbarButton","icon","concat","ConversationList","_useState","useState","_useState2","Object","slicedToArray","conversations","setConversations","getConversations","axios","get","then","response","newConversations","results","map","result","picture","large","first","last","toConsumableArray","Toolbar_Toolbar","ToolbarButton_ToolbarButton","key","ConversationSearch_ConversationSearch","conversation","ConversationListItem_ConversationListItem","Compose","Message","isMine","startsSequence","endsSequence","showTimestamp","friendlyTimestamp","moment","timestamp","format","join","message","MY_USER_ID","MessageList","messages","setMessages","getMessages","tempMessages","id","author","Date","getTime","i","messageCount","length","previous","current","next","currentMoment","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push","Message_Message","renderMessages","Compose_Compose","Messenger","ConversationList_ConversationList","MessageList_MessageList","App","Messenger_Messenger","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4bb49dd8.chunk.js","sourcesContent":["import React from 'react';\nimport './ConversationSearch.css';\n\nexport default function ConversationSearch() {\n    return (\n      <div className=\"conversation-search\">\n        <input\n          type=\"search\"\n          className=\"conversation-search-input\"\n          placeholder=\"Search Messages\"\n        />\n      </div>\n    );\n}","import React, {useEffect} from 'react';\nimport shave from 'shave';\n\nimport './ConversationListItem.css';\n\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  })\n\n    const { photo, name, text } = props.data;\n\n    return (\n      <div className=\"conversation-list-item\">\n        <img className=\"conversation-photo\" src={photo} alt=\"conversation\" />\n        <div className=\"conversation-info\">\n          <h1 className=\"conversation-title\">{ name }</h1>\n          <p className=\"conversation-snippet\">{ text }</p>\n        </div>\n      </div>\n    );\n}","import React from 'react';\nimport './Toolbar.css';\n\nexport default function Toolbar(props) {\n    const { title, leftItems, rightItems } = props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"left-items\">{ leftItems }</div>\n        <h1 className=\"toolbar-title\">{ title }</h1>\n        <div className=\"right-items\">{ rightItems }</div>\n      </div>\n    );\n}","import React from 'react';\nimport './ToolbarButton.css';\n\nexport default function ToolbarButton(props) {\n    const { icon } = props;\n    return (\n      <i className={`toolbar-button ${icon}`} />\n    );\n}","import React, {useState, useEffect} from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\n\nimport './ConversationList.css';\n\nexport default function ConversationList(props) {\n  const [conversations, setConversations] = useState([]);\n  useEffect(() => {\n    getConversations()\n  },[])\n\n const getConversations = () => {\n    axios.get('https://randomuser.me/api/?results=20').then(response => {\n        let newConversations = response.data.results.map(result => {\n          return {\n            photo: result.picture.large,\n            name: `${result.name.first} ${result.name.last}`,\n            text: 'Hello world! This is a long message that needs to be truncated.'\n          };\n        });\n        setConversations([...conversations, ...newConversations])\n    });\n  }\n\n    return (\n      <div className=\"conversation-list\">\n        <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        />\n        <ConversationSearch />\n        {\n          conversations.map(conversation =>\n            <ConversationListItem\n              key={conversation.name}\n              data={conversation}\n            />\n          )\n        }\n      </div>\n    );\n}","import React from 'react';\nimport './Compose.css';\n\nexport default function Compose(props) {\n    return (\n      <div className=\"compose\">\n        <input\n          type=\"text\"\n          className=\"compose-input\"\n          placeholder=\"Type a message, @name\"\n        />\n\n        {\n          props.rightItems\n        }\n      </div>\n    );\n}","import React from 'react';\nimport moment from 'moment';\nimport './Message.css';\n\nexport default function Message(props) {\n    const {\n      data,\n      isMine,\n      startsSequence,\n      endsSequence,\n      showTimestamp\n    } = props;\n\n    const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n    return (\n      <div className={[\n        'message',\n        `${isMine ? 'mine' : ''}`,\n        `${startsSequence ? 'start' : ''}`,\n        `${endsSequence ? 'end' : ''}`\n      ].join(' ')}>\n        {\n          showTimestamp &&\n            <div className=\"timestamp\">\n              { friendlyTimestamp }\n            </div>\n        }\n\n        <div className=\"bubble-container\">\n          <div className=\"bubble\" title={friendlyTimestamp}>\n            { data.message }\n          </div>\n        </div>\n      </div>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\n\nimport './MessageList.css';\n\nconst MY_USER_ID = 'apple';\n\nexport default function MessageList(props) {\n  const [messages, setMessages] = useState([])\n\n  useEffect(() => {\n    getMessages();\n  },[])\n\n  \n  const getMessages = () => {\n     var tempMessages = [\n        {\n          id: 1,\n          author: 'apple',\n          message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n          timestamp: new Date().getTime()\n        },\n        {\n          id: 2,\n          author: 'orange',\n          message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n          timestamp: new Date().getTime()\n        },\n        {\n          id: 3,\n          author: 'orange',\n          message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n          timestamp: new Date().getTime()\n        },\n        {\n          id: 4,\n          author: 'apple',\n          message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n          timestamp: new Date().getTime()\n        },\n        {\n          id: 5,\n          author: 'apple',\n          message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n          timestamp: new Date().getTime()\n        },\n        {\n          id: 6,\n          author: 'apple',\n          message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n          timestamp: new Date().getTime()\n        },\n        {\n          id: 7,\n          author: 'orange',\n          message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n          timestamp: new Date().getTime()\n        },\n        {\n          id: 8,\n          author: 'orange',\n          message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n          timestamp: new Date().getTime()\n        },\n        {\n          id: 9,\n          author: 'apple',\n          message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n          timestamp: new Date().getTime()\n        },\n        {\n          id: 10,\n          author: 'orange',\n          message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n          timestamp: new Date().getTime()\n        },\n      ]\n      setMessages([...messages, ...tempMessages])\n  }\n\n  const renderMessages = () => {\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n        \n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n\n    return tempMessages;\n  }\n\n    return(\n      <div className=\"message-list\">\n        <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        />\n\n        <div className=\"message-list-container\">{renderMessages()}</div>\n\n        <Compose rightItems={[\n          <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n          <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n          <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n          <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n          <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n        ]}/>\n      </div>\n    );\n}","import React from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\nimport './Messenger.css';\n\nexport default function Messenger(props) {\n    return (\n      <div className=\"messenger\">\n        {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n        {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n\n        <div className=\"scrollable sidebar\">\n          <ConversationList />\n        </div>\n\n        <div className=\"scrollable content\">\n          <MessageList />\n        </div>\n      </div>\n    );\n}","import React from 'react';\nimport Messenger from '../Messenger';\n\nexport default function App() {\n    return (\n      <div className=\"App\">\n        <Messenger />\n      </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}